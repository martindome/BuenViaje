<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamicPDF.Printing.NETFramework40</name>
    </assembly>
    <members>
        <member name="T:ceTe.DynamicPDF.Printing.ActualSizePageScaling">
             <summary>
             Represents the actual page scaling size for the job page .
             </summary>
             <example>The following examples creates a print job, sets the scaling propety to actual size and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the scaling
                     MyPrintJob.PrintOptions.Scaling = PageScaling.ActualSize
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the scaling
                     printJob.PrintOptions.Scaling = PageScaling.ActualSize;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.Attachment">
             <summary>
             Represents a Attachments present in PDFDocument
             </summary>
             <example>The following examples retrieves the attachment files in the PDFDocument.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create an InputPdf object to hold the source PDF
                     Dim MyInputPdf As InputPdf = New InputPdf("C:\MyDocument.pdf")
            
                     ' Getting the AttachmentFiles present in PDFDocument
                     Dim files() As Attachment =  inputPdf.Attachments 
                    
                    ' Gets the InputPdf file present in AttachmentFiles
                     Dim MyInputPdfFile As InputPdf =  files(0).TryGetPDF() 
                          
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
            	        // Create an InputPdf object to hold the source PDF
                     InputPdf inputPdf = new InputPdf(@"C:\MyDocument.pdf");
                    
                     //Getting the AttachmentFiles present in PDFDocument
            		    Attachment[] files = inputPdf.Attachments;
            
                     //Gets the InputPdf file present in AttachmentFiles
                     InputPdf inputPdfFile = files[0].TryGetPDF();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Attachment.TryGetPdf(System.String)">
            <summary>
            Gets the InputPdf file of the Attachment Files.
            </summary>
            <param name="password">The string containing the password.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Attachment.TryGetPdf">
            <summary>
            Gets the Data of the Attachment Files.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Attachment.FileName">
            <summary>
            Gets the Filenames of the Attachment Files present in PDFDocument.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.AutoPageScaling">
             <summary>
             Represents auto page scaling size for the job page .
             </summary>
             <example>The following examples creates a print job, sets the scaling property to auto page scaling and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the scaling
                     Dim MyAutoPageScaling As AutoPageScaling = New AutoPageScaling(ScaleTo.PagePrintableArea, True, True)
                     MyPrintJob.PrintOptions.Scaling = MyAutoPageScaling
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the scaling
                     AutoPageScaling autoPageScaling = new AutoPageScaling(ScaleTo.PagePrintableArea, true, true);
                     printJob.PrintOptions.Scaling = autoPageScaling;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.AutoPageScaling.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.AutoPageScaling"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.AutoPageScaling.#ctor(ceTe.DynamicPDF.Printing.ScaleTo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.AutoPageScaling"/> class.
            </summary>
            <param name="scaleTo">A <see cref="P:ceTe.DynamicPDF.Printing.AutoPageScaling.ScaleTo"/> value specifying the boundaries of the auto page scaling.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.AutoPageScaling.#ctor(ceTe.DynamicPDF.Printing.ScaleTo,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.AutoPageScaling"/> class.
            </summary>
            <param name="scaleTo">A <see cref="P:ceTe.DynamicPDF.Printing.AutoPageScaling.ScaleTo"/> value specifying the boundaries of the page to use for scaling.</param>
            <param name="shrinkIfNeeded">Boolean value indicating if the page scale size can be shrunk.</param>
            <param name="expandIfNeeded">Boolean value indicating if the page scale size can be expanded.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.AutoPageScaling.AutoExpand">
            <summary>
            Gets or sets a value indicating if the page scaling size can be expanded.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.AutoPageScaling.AutoShrink">
            <summary>
            Gets or sets a value indicating if the page scaling size can be shrunk.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.AutoPageScaling.ScaleTo">
            <summary>
            Gets or sets a value indicating the boundaries on the page to use for the scaling.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.Border">
             <summary>
             Draws a border around the pages.
             </summary>
             <example>The following examples demonstrates, how to set a border for pages while doing the multi page print.
             <code lang="VB">
            	Imports ceTe.DynamicPDF.Printing
            	Imports System.Drawing
            
            	Module MyModule
            		Sub Main()
            			' Create a print job containing the first four pages of the PDF.
            			Dim printJob As New PrintJob(Printer.[Default], "C:\MyDocument.pdf", 1, 4)
            
            			' Creating the object of MultipagePageScaling.
            			Dim multipagePageScaling As New MultipagePageScaling(4, 2)
            
            			' Setting the border and its color.
            			multipagePageScaling.Border = New Border(Color.Green, 2)
            
            			' Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = New ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5)
            
            			' Setting the spacing between pages.
            			multipagePageScaling.Spacing = New Spacing(2, 2)
            
            			' If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = True
            
            			' Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling
            
            			' Print the job.
            			printJob.Print()
            		End Sub
            	End Module
             </code>
             <code lang="C#">
            	using System;
            	using ceTe.DynamicPDF.Printing;
            	using System.Drawing;
            
            	class MyClass
            	{
            		static void Main()
            		{
            			// Create a print job containing the first four pages of the PDF.
            			PrintJob printJob = new PrintJob(Printer.Default, @"C:\MyDocument.pdf", 1, 4);
            
            			// Creating the object of MultipagePageScaling.
            			MultipagePageScaling multipagePageScaling = new MultipagePageScaling(4, 2);
            
            			// Setting the border and its color.
            			multipagePageScaling.Border = new Border(Color.Green, 2);
            
            			// Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = new ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5);
            
            			// Setting the spacing between pages.
            			multipagePageScaling.Spacing = new Spacing(2, 2);
            
            			// If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = true;
            
            			// Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling;
            
            			// Print the job.
            			printJob.Print();
            		}
            	}
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Border.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.Border"/> class.
            </summary>
            <param name="color">The color of the PDF page border.</param>
            <param name="thickness">The thickness of the PDF page border.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Border.Thickness">
            <summary>
            Gets or sets the thickness of the PDF page border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Border.Color">
            <summary>
            Gets or sets the color of the PDF page border.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DM.DMDUP_UNKNOWN">
            <summary>
            Unknown setting.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DM.DMDUP_SIMPLEX">
            <summary>
            Normal (nonduplex) printing.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DM.DMDUP_VERTICAL">
            <summary>
            Long-edge binding, that is, the long edge of the page is vertical.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DM.DMDUP_HORIZONTAL">
            <summary>
            Short-edge binding, that is, the long edge of the page is horizontal.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.DocumentLoadException">
            <summary>
            Represents a document load exception.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.DuplexMode">
             <summary>
             Represents duplex modes.
             </summary>
             <example>The following examples creates a print job, sets the duplex mode if it is supported by the printer and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
             
                     ' Set the duplex mode if it is supported by the printer
                     If (MyPrintJob.Printer.Duplex) Then
                         MyPrintJob.PrintOptions.DuplexMode = DuplexMode.DuplexHorizontal
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the duplex mode if it is supported by the printer
                     if (printJob.Printer.Duplex)
                     {
                         printJob.PrintOptions.DuplexMode = DuplexMode.DuplexHorizontal;
                     }
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DuplexMode.Simplex">
            <summary>
            Simplex (non duplex) mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DuplexMode.DuplexVertical">
            <summary>
            Duplex mode that flips the page vertically.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.DuplexMode.DuplexHorizontal">
            <summary>
            Duplex mode that flips the page horizontally.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.FaxCoverPage">
             <summary>
             Represents a cover page for the fax.
             </summary>
             <example>The following examples creates a fax print job, sets the cover page values and sends the fax.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a fax print job
                     Dim MyFaxPrintJob As FaxPrintJob = New FaxPrintJob("FaxPrinterName", "1-555-465-1177", "C:\MyDocument.pdf")
            
                     ' Add a local cover page
                     MyFaxPrintJob.FaxOptions.CoverPage = New LocalCoverPage("C:\Custom.cov")
            
                     ' Set the cover page values
                     MyFaxPrintJob.FaxOptions.CoverPage.Note = "Note"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCity = "RecipientCity"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCompany = "RecipientCompany"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCountry = "RecipientCountry"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientDepartment = "RecipientDepartment"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientFaxNumber = "RecipientFaxNumber"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientHomePhone = "RecipientHomePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientName = "RecipientName"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientOfficeLocation = "RecipientOfficeLocation"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientOfficePhone = "RecipientOfficePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientState = "RecipientState"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientStreetAddress = "RecipientStreetAddress"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientTitle = "RecipientTitle"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientZip = "RecipientZip"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderAddress = "SenderAddress"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderCompany = "SenderCompany"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderDepartment = "SenderDepartment"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderFaxNumber = "SenderFaxNumber"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderHomePhone = "SenderHomePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderName = "SenderName"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderOfficeLocation = "SenderOfficeLocation"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderOfficePhone = "SenderOfficePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderTitle = "SenderTitle"
                     MyFaxPrintJob.FaxOptions.CoverPage.Subject = "Subject"
            
                     ' Send the fax
                     MyFaxPrintJob.Print()	
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a fax print job
                     FaxPrintJob faxPrintJob = new FaxPrintJob("FaxPrinterName", "1-555-465-1177", @"C:\MyDocument.pdf");
            
                     // Add a local cover page
                     faxPrintJob.FaxOptions.CoverPage = new LocalCoverPage(@"Custom.cov");
            
                     // Set the cover page values
                     faxPrintJob.FaxOptions.CoverPage.Note = "Note";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCity = "RecipientCity";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCompany = "RecipientCompany";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCountry = "RecipientCountry";
                     faxPrintJob.FaxOptions.CoverPage.RecipientDepartment = "RecipientDepartment";
                     faxPrintJob.FaxOptions.CoverPage.RecipientFaxNumber = "RecipientFaxNumber";
                     faxPrintJob.FaxOptions.CoverPage.RecipientHomePhone = "RecipientHomePhone";
                     faxPrintJob.FaxOptions.CoverPage.RecipientName = "RecipientName";
                     faxPrintJob.FaxOptions.CoverPage.RecipientOfficeLocation = "RecipientOfficeLocation";
                     faxPrintJob.FaxOptions.CoverPage.RecipientOfficePhone = "RecipientOfficePhone";
                     faxPrintJob.FaxOptions.CoverPage.RecipientState = "RecipientState";
                     faxPrintJob.FaxOptions.CoverPage.RecipientStreetAddress = "RecipientStreetAddress";
                     faxPrintJob.FaxOptions.CoverPage.RecipientTitle = "RecipientTitle";
                     faxPrintJob.FaxOptions.CoverPage.RecipientZip = "RecipientZip";
                     faxPrintJob.FaxOptions.CoverPage.SenderAddress = "SenderAddress";
                     faxPrintJob.FaxOptions.CoverPage.SenderCompany = "SenderCompany";
                     faxPrintJob.FaxOptions.CoverPage.SenderDepartment = "SenderDepartment";
                     faxPrintJob.FaxOptions.CoverPage.SenderFaxNumber = "SenderFaxNumber";
                     faxPrintJob.FaxOptions.CoverPage.SenderHomePhone = "SenderHomePhone";
                     faxPrintJob.FaxOptions.CoverPage.SenderName = "SenderName";
                     faxPrintJob.FaxOptions.CoverPage.SenderOfficeLocation = "SenderOfficeLocation";
                     faxPrintJob.FaxOptions.CoverPage.SenderOfficePhone = "SenderOfficePhone";
                     faxPrintJob.FaxOptions.CoverPage.SenderTitle = "SenderTitle";
                     faxPrintJob.FaxOptions.CoverPage.Subject = "Subject";
            
                     // Send the fax
                     faxPrintJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientFaxNumber">
            <summary>
            Gets or sets the fax number associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientCompany">
            <summary>
            Gets or sets the company name associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientStreetAddress">
            <summary>
            Gets or sets the street address of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientCity">
            <summary>
            Gets or sets the city of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientState">
            <summary>
            Gets or sets the state of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientZip">
            <summary>
            Gets or sets the zip code of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientCountry">
            <summary>
            Gets or sets the country of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientTitle">
            <summary>
            Gets or sets the title associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientDepartment">
            <summary>
            Gets or sets the department associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientOfficeLocation">
            <summary>
            Gets or sets the office location of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientHomePhone">
            <summary>
            Gets or sets the home phone number associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.RecipientOfficePhone">
            <summary>
            Gets or sets the office phone number associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderName">
            <summary>
            Gets or sets the name associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderFaxNumber">
            <summary>
            Gets or sets the fax number associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderCompany">
            <summary>
            Gets or sets the company name associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderAddress">
            <summary>
            Gets or sets the address of the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderTitle">
            <summary>
            Gets or sets the title title associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderDepartment">
            <summary>
            Gets or sets the department name associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderOfficeLocation">
            <summary>
            Gets or sets the office location of the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderHomePhone">
            <summary>
            Gets or sets the home phone number associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.SenderOfficePhone">
            <summary>
            Gets or sets the office phone number associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.Note">
            <summary>
            Gets or sets the content of the note field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxCoverPage.Subject">
            <summary>
            Gets or sets the subject for the fax to be sent.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.FaxOptions">
             <summary>
             Represents the fax options.
             </summary>
             <example>The following examples creates a fax print job, sets fax options and sends the fax.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a fax print job
                     Dim MyFaxPrintJob As FaxPrintJob = New FaxPrintJob("FaxPrinterName", "1-555-389-4567", "C:\MyDocument.pdf")
            
                     ' Set fax option values
                     MyFaxPrintJob.FaxOptions.RecipientName = "RecipientName"
                     MyFaxPrintJob.FaxOptions.SenderBillingCode = "SenderBillingCode"
                     MyFaxPrintJob.FaxOptions.SenderCompany = "CompanyName"
                     MyFaxPrintJob.FaxOptions.SenderDept = "DepartmentName"
                     MyFaxPrintJob.FaxOptions.SenderName = "SenderName"
            
                     ' Send the fax
                     MyFaxPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a fax print job
                     FaxPrintJob faxPrintJob = new FaxPrintJob("FaxPrinterName", "1-555-465-1177", @"C:\MyDocument.pdf");
            
                     // Set fax option values
                     faxPrintJob.FaxOptions.RecipientName = "RecipientName";
                     faxPrintJob.FaxOptions.SenderBillingCode = "SenderBillingCode";
                     faxPrintJob.FaxOptions.SenderCompany = "CompanyName";
                     faxPrintJob.FaxOptions.SenderDept = "DepartmentName";
                     faxPrintJob.FaxOptions.SenderName = "SenderName";
            
                     // Send the fax
                     faxPrintJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.RecipientName">
            <summary>
            Gets or sets the name of the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.RecipientNumber">
            <summary>
            Gets or sets the fax number associated with the recipient.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.SenderBillingCode">
            <summary>
            Gets or sets the billing code associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.SenderCompany">
            <summary>
            Gets or sets the company name of the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.SenderDept">
            <summary>
            Gets or sets the department associated with the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.SenderName">
            <summary>
            Gets or sets the name of the sender.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxOptions.CoverPage">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Printing.FaxCoverPage"/> object that represents the cover page for the fax document.
            </summary>
            <remarks>
            If this value is null (Nothing in VB), no cover page will be added. To add a cover page, create a <see cref="T:ceTe.DynamicPDF.Printing.LocalCoverPage"/>
            or <see cref="T:ceTe.DynamicPDF.Printing.ServerCoverPage"/> object and set it to this property. See the appropriate classes for an example.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.FaxPrintJob">
             <summary>
             Represents a job that can be sent to a printer for printing a fax.
             </summary>
             <example>The following examples creates a fax print job and sends the fax.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a fax print job
                     Dim MyFaxPrintJob As FaxPrintJob = New FaxPrintJob("FaxPrinterName", "1-555-389-4567", "C:\MyDocument.pdf")
            
                     ' Send the fax
                     MyFaxPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a fax print job
                     FaxPrintJob faxPrintJob = new FaxPrintJob("FaxPrinterName", "1-555-465-1177", @"C:\MyDocument.pdf");
            
                     // Send the fax
                     faxPrintJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printer">The fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String,ceTe.DynamicPDF.Printing.InputPdf)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printer">The fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printer">The fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String,ceTe.DynamicPDF.Printing.InputPdf,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printer">The fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the fax print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the fax print job.</param>
            <param name="pageCount">The number of pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printer">The fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the fax print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the fax print job.</param>
            <param name="pageCount">The number of pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printerName">The name of the fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(System.String,System.String,ceTe.DynamicPDF.Printing.InputPdf)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printerName">The name of the fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(System.String,System.String,ceTe.DynamicPDF.Printing.InputPdf,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printerName">The name of the fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the fax print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the fax print job.</param>
            <param name="pageCount">The number of pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printerName">The name of the fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the fax print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> class.
            </summary>
            <param name="printerName">The name of the fax printer used by the fax print job.</param>
            <param name="recipientNumber">The fax number associated with the recipient.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the fax print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the fax print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.FaxPrintJob.FaxOptions">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Printing.FaxPrintJob.FaxOptions"/>object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.Finalize">
            <summary>
            Releases resources used by the <see cref="T:ceTe.DynamicPDF.Printing.FaxPrintJob"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.FaxPrintJob.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.HorizontalAlign">
             <summary>
             Represents the horizontal alignment to use when printing pages.
             </summary>
             <example>The following examples creates a print job, sets the horizontal align to left and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the horizontal alignment
                     MyPrintJob.PrintOptions.HorizontalAlign = HorizontalAlign.Left
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
               
                     // Set the horizontal alignment
                     printJob.PrintOptions.HorizontalAlign = HorizontalAlign.Left;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.HorizontalAlign.Left">
            <summary>Left horizontal alignment.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.HorizontalAlign.Center">
            <summary>Center horizontal alignment.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.HorizontalAlign.Right">
            <summary>Right horizontal alignment.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.InputPdf">
             <summary>
             Represents a pdf containing the pages to be added to the print job.
             </summary>
             <example>The following examples creates a print job, adds PDF pages to print the job and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName")
            
                     ' Create an InputPdf object to hold the source PDF
                     Dim MyInputPdf As InputPdf = New InputPdf("C:\MyDocument.pdf", "password")
            
                     ' Add the InputPdf's pages to the print job
                     MyPrintJob.Pages.Add(MyInputPdf)
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName");
            
                     // Create an InputPdf object to hold the source PDF
                     InputPdf inputPdf = new InputPdf(@"C:\MyDocument.pdf", "password");
            
                     // Add the InputPdf's pages to the print job
                     printJob.Pages.Add(inputPdf);
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> class.
            </summary>
            <param name="filePath">The file path of the PDF document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> class.
            </summary>
            <param name="filePath">The file path of the PDF document.</param>
            <param name="password">The string containing the password.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> class.
            </summary>
            <param name="data">The byte array containing the Pdf document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> class.
            </summary>
            <param name="data">The byte array containing the PDF document.</param>
            <param name="password">The string containing the password.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Pages">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Printing.InputPdfPageList"/> object that represents a collection of pages.
            </summary>				
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Title">
            <summary>
            Gets the title  of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Author">
            <summary>
            Gets the author  of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Subject">
            <summary>
            Gets the subject  of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Keywords">
            <summary>
            Gets the keywords  of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Creator">
            <summary>
            Gets the creator  of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Producer">
            <summary>
            Gets the producer  of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdf.Attachments">
            <summary>
            Gets the Attachment Files of PDF document.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_SUCCESS">
             @name Last error code
            @{
            @brief No error. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_UNKNOWN">
            @brief Unknown error. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_FILE">
            @brief Unknown error. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_FORMAT">
            @brief File not found or could not be opened. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_PASSWORD">
            @brief Password required or incorrect password. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_SECURITY">
            @brief Unsupported security scheme. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_PAGE">
            @brief Page not found or content error. 
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.InputPdf.FPDF_ERR_PARAM">
            @brief Parameter error. 
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.Finalize">
            <summary>
            Releases resources used by the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdf.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.InputPdfPage">
             <summary>
             Represents a page of pdf to be added to the print job.
             </summary>
             <example>The following examples creates a print job, adds PDF pages to print job and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName")
            
                     ' Create an InputPdf object to hold the source PDF
                     Dim MyInputPdf As InputPdf = New InputPdf("C:\MyDocument.pdf")
            
                     ' Get pages from the input PDF
                     Dim MyFirstPage As InputPdfPage = MyInputPdf.Pages(0)
                     Dim MyFourthPage As InputPdfPage = MyInputPdf.Pages(3)
            
                     ' Add pages to the print job
                     MyPrintJob.Pages.Add(MyFirstPage)
                     MyPrintJob.Pages.Add(MyFourthPage)
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName");
            
                     // Create an InputPdf object to hold the source PDF
                     InputPdf inputPdf = new InputPdf(@"C:\MyDocument.pdf");
            
                     // Get pages from the input PDF
                     InputPdfPage firstPage = inputPdf.Pages[0];
                     InputPdfPage fourthPage = inputPdf.Pages[3];
            
                     // Add pages to the print job
                     printJob.Pages.Add(firstPage);
                     printJob.Pages.Add(fourthPage);
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPage.Height">
            <summary>
            Gets the height of the PDF page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPage.Width">
            <summary>
            Gets the width of the PDF page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPage.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPage.Finalize">
            <summary>
            Releases resources used by the <see cref="T:ceTe.DynamicPDF.Printing.InputPdfPage"/> object.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.InputPdfPageList">
             <summary>
             Represents the list of pdf pages to be added to the print job.
             </summary>
             <example>The following examples creates a print job, adds PDF pages to print job and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
                     
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName")
            
                     ' Create an InputPdf object to hold the source PDF
                     Dim MyInputPdf As InputPdf = New InputPdf("C:\MyDocument.pdf")
            
                     ' Get a list of the input PDF's pages
                     Dim MyInputPdfPages As InputPdfPageList = MyInputPdf.Pages
            
                     ' Add pages to the print job
                     MyPrintJob.Pages.Add(MyInputPdfPages(0)) ' First Page
                     MyPrintJob.Pages.Add(MyInputPdfPages(3)) ' Fourth Page
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName");
            
                     // Create an InputPdf object to hold the source PDF
                     InputPdf inputPdf = new InputPdf(@"C:\MyDocument.pdf");
            
                     // Get a list of the input PDF's pages
                     InputPdfPageList inputPdfPages = inputPdf.Pages;
            
                     // Add pages to the print job
                     printJob.Pages.Add(inputPdfPages[0]); // First Page
                     printJob.Pages.Add(inputPdfPages[3]); // Fourth Page
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPageList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Printing.InputPdfPage"/> object that represents the PDF page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPageList.Count">
            <summary>
            Gets the number of pages in the list.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>enumerator to the <see cref="T:ceTe.DynamicPDF.Printing.InputPdfPageList"/></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageList.Finalize">
            <summary>
            Releases resources used by the <see cref="T:ceTe.DynamicPDF.Printing.InputPdfPageList"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageList.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator">
            <summary>
            Represents the Enumerator for the list of pdf pages to be added to the print job.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.#ctor(ceTe.DynamicPDF.Printing.InputPdfPageList)">
            <summary>
            Initializes a new instance of the InputPdfPageListEnumerator class.
            </summary>
            <param name="pageList">Represents the list of pdf pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.CurrentIEnumeratorNonGeneric">
            <summary>
            Gets the current element in the collection as object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection as object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.InputPdfPageListEnumerator.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.InvalidPasswordException">
            <summary>
            Represents a invalid password exception.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.LocalCoverPage">
             <summary>
             Represents a cover page.
             </summary>
             <example>The following examples creates a fax print job, sets the cover page values and sends the fax.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a fax print job
                     Dim MyFaxPrintJob As FaxPrintJob = New FaxPrintJob("FaxPrinterName", "1-555-465-1177", "C:\MyDocument.pdf")
            
                     ' Add a local cover page
                     MyFaxPrintJob.FaxOptions.CoverPage = New LocalCoverPage("C:\Custom.cov")
            
                     ' Set the cover page values
                     MyFaxPrintJob.FaxOptions.CoverPage.Note = "Note"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCity = "RecipientCity"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCompany = "RecipientCompany"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCountry = "RecipientCountry"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientDepartment = "RecipientDepartment"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientFaxNumber = "RecipientFaxNumber"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientHomePhone = "RecipientHomePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientName = "RecipientName"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientOfficeLocation = "RecipientOfficeLocation"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientOfficePhone = "RecipientOfficePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientState = "RecipientState"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientStreetAddress = "RecipientStreetAddress"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientTitle = "RecipientTitle"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientZip = "RecipientZip"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderAddress = "SenderAddress"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderCompany = "SenderCompany"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderDepartment = "SenderDepartment"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderFaxNumber = "SenderFaxNumber"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderHomePhone = "SenderHomePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderName = "SenderName"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderOfficeLocation = "SenderOfficeLocation"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderOfficePhone = "SenderOfficePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderTitle = "SenderTitle"
                     MyFaxPrintJob.FaxOptions.CoverPage.Subject = "Subject"
            
                     ' Send the fax
                     MyFaxPrintJob.Print()	
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a fax print job
                     FaxPrintJob faxPrintJob = new FaxPrintJob("FaxPrinterName", "1-555-465-1177", @"C:\MyDocument.pdf");
            
                     // Add a local cover page
                     faxPrintJob.FaxOptions.CoverPage = new LocalCoverPage(@"Custom.cov");
                     
                     // Set the cover page values
                     faxPrintJob.FaxOptions.CoverPage.Note = "Note";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCity = "RecipientCity";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCompany = "RecipientCompany";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCountry = "RecipientCountry";
            			faxPrintJob.FaxOptions.CoverPage.RecipientDepartment = "RecipientDepartment";
                     faxPrintJob.FaxOptions.CoverPage.RecipientFaxNumber = "RecipientFaxNumber";
                     faxPrintJob.FaxOptions.CoverPage.RecipientHomePhone = "RecipientHomePhone";
                     faxPrintJob.FaxOptions.CoverPage.RecipientName = "RecipientName";
                     faxPrintJob.FaxOptions.CoverPage.RecipientOfficeLocation = "RecipientOfficeLocation";
                     faxPrintJob.FaxOptions.CoverPage.RecipientOfficePhone = "RecipientOfficePhone";
                     faxPrintJob.FaxOptions.CoverPage.RecipientState = "RecipientState";
                     faxPrintJob.FaxOptions.CoverPage.RecipientStreetAddress = "RecipientStreetAddress";
                     faxPrintJob.FaxOptions.CoverPage.RecipientTitle = "RecipientTitle";
                     faxPrintJob.FaxOptions.CoverPage.RecipientZip = "RecipientZip";
                     faxPrintJob.FaxOptions.CoverPage.SenderAddress = "SenderAddress";
                     faxPrintJob.FaxOptions.CoverPage.SenderCompany = "SenderCompany";
                     faxPrintJob.FaxOptions.CoverPage.SenderDepartment = "SenderDepartment";
                     faxPrintJob.FaxOptions.CoverPage.SenderFaxNumber = "SenderFaxNumber";
                     faxPrintJob.FaxOptions.CoverPage.SenderHomePhone = "SenderHomePhone";
                     faxPrintJob.FaxOptions.CoverPage.SenderName = "SenderName";
                     faxPrintJob.FaxOptions.CoverPage.SenderOfficeLocation = "SenderOfficeLocation";
                     faxPrintJob.FaxOptions.CoverPage.SenderOfficePhone = "SenderOfficePhone";
                     faxPrintJob.FaxOptions.CoverPage.SenderTitle = "SenderTitle";
                     faxPrintJob.FaxOptions.CoverPage.Subject = "Subject";
            
                     // Send the fax
                     faxPrintJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.LocalCoverPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.LocalCoverPage"/> class.
            </summary>
            <param name="filePath">The file path of the local cover page (*.cov) file.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.LocalCoverPage.FilePath">
            <summary>
            Gets or sets the file path of the local cover page (*.cov) file.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.Margin">
             <summary>
             Puts margin for pages while doing a multi page print.
             </summary>
             <example>The following examples demonstrates, how to set margin for pages while doing the multi page print.
             <code lang="VB">
            	Imports ceTe.DynamicPDF.Printing
            	Imports System.Drawing
            
            	Module MyModule
            		Sub Main()
            			' Create a print job containing the first four pages of the PDF.
            			Dim printJob As New PrintJob(Printer.[Default], "C:\MyDocument.pdf", 1, 4)
            
            			' Creating the object of MultipagePageScaling.
            			Dim multipagePageScaling As New MultipagePageScaling(4, 2)
            
            			' Setting the border and its color.
            			multipagePageScaling.Border = New Border(Color.Green, 2)
            
            			' Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = New ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5)
            
            			' Setting the spacing between pages.
            			multipagePageScaling.Spacing = New Spacing(2, 2)
            
            			' If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = True
            
            			' Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling
            
            			' Print the job.
            			printJob.Print()
            		End Sub
            	End Module
             </code>
             <code lang="C#">
            	using System;
            	using ceTe.DynamicPDF.Printing;
            	using System.Drawing;
            
            	class MyClass
            	{
            		static void Main()
            		{
            			// Create a print job containing the first four pages of the PDF.
            			PrintJob printJob = new PrintJob(Printer.Default, @"C:\MyDocument.pdf", 1, 4);
            
            			// Creating the object of MultipagePageScaling.
            			MultipagePageScaling multipagePageScaling = new MultipagePageScaling(4, 2);
            
            			// Setting the border and its color.
            			multipagePageScaling.Border = new Border(Color.Green, 2);
            
            			// Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = new ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5);
            
            			// Setting the spacing between pages.
            			multipagePageScaling.Spacing = new Spacing(2, 2);
            
            			// If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = true;
            
            			// Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling;
            
            			// Print the job.
            			printJob.Print();
            		}
            	}
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Margin.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.Margin"/> class using the supplied margin size for all edges.
            </summary>
            <param name="margin">The margin size for the all edges.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Margin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.Margin"/> class using a separate margin size for each edge.
            </summary>
            <param name="left">The margin size for the left edge.</param>
            <param name="top">The margin size for the top edge.</param>
            <param name="right">The margin size for the right edge.</param>
            <param name="bottom">The margin size for the bottom edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Margin.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.Margin"/> class using a separate margin size for top, bottom and left, right.
            </summary>
            <param name="topBottom">The margin size for the top and bottom edges.</param>
            <param name="leftRight">The margin size for the left and right edges.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Margin.Top">
            <summary>
            Gets or sets the margin value for the top edge.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Margin.Left">
            <summary>
            Gets or sets the margin value for the left edge.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Margin.Right">
            <summary>
            Gets or sets the margin value for the right edge.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Margin.Bottom">
            <summary>
            Gets or sets the margin value for the bottom edge.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.MediaType">
             <summary>
             Represents a media type.
             </summary>
             <example>The following examples creates a print job, and selects the media type from the printer media type list and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
                     
                     ' Create a print job
            			Dim printJob As New PrintJob(Printer.[Default], "C:\Temp\DocumentA.pdf")
            
            			' Find media types available for default printer
            			Dim mediaTypeList As MediaTypeList = Printer.[Default].MediaTypes
            
            			' Set appropriate media type.
            			If mediaTypeList.Standard IsNot Nothing Then
            			printJob.PrintOptions.MediaType = mediaTypeList.Standard
            			End If
            
            			' Print the job
            			printJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
             		// Create a print job
             		PrintJob printJob = new PrintJob(Printer.Default, "C:\\Temp\\DocumentA.pdf");
            
             		// Find media types available for default printer
             		MediaTypeList mediaTypeList = Printer.Default.MediaTypes;
            
             		// Set appropriate media type.
             		if(mediaTypeList.Standard!= null)
             		printJob.PrintOptions.MediaType = mediaTypeList.Standard;
            
             		// Print the job
             		printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaType.Name">
            <summary>
            Gets the name of the media type.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaType.DeviceContextMediaType">
            <summary>
            Gets the value of the media type from DC_MEDIATYPES array.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.MediaTypeList">
             <summary>
             Represents a list of media types.
             </summary>
             <example>The following examples creates a print job, and selects the media type from the printer media type list and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
                     
                     ' Create a print job
            			Dim printJob As New PrintJob(Printer.[Default], "C:\Temp\DocumentA.pdf")
            
            			' Find media types available for default printer
            			Dim mediaTypeList As MediaTypeList = Printer.[Default].MediaTypes
            
            			' Set appropriate media type.
            			If mediaTypeList.Standard IsNot Nothing Then
            			printJob.PrintOptions.MediaType = mediaTypeList.Standard
            			End If
            
            			' Print the job
            			printJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
             		// Create a print job
             		PrintJob printJob = new PrintJob(Printer.Default, "C:\\Temp\\DocumentA.pdf");
            
             		// Find media types available for default printer
             		MediaTypeList mediaTypeList = Printer.Default.MediaTypes;
            
             		// Set appropriate media type.
             		if(mediaTypeList.Standard!= null)
             		printJob.PrintOptions.MediaType = mediaTypeList.Standard;
            
             		// Print the job
             		printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>			
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaTypeList.Item(System.Int32)">
            <summary>
            Gets the media type by its index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaTypeList.Item(System.String)">
            <summary>
            Gets the media type by its name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaTypeList.Count">
            <summary>
            Gets the media type count.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaTypeList.Standard">
            <summary>
            Gets the standard media type if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaTypeList.Glossy">
            <summary>
            Gets the glossy media type if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MediaTypeList.Transparency">
            <summary>
            Gets the transparency media type if it is specified by the printer.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.MultipagePageScaling">
             <summary>
             Represents multi page scaling size for the job page .
             </summary>
             <example>The following examples creates a print job, sets the scaling property to multi page scaling and prints the job.
             <code lang="VB">
            	Imports ceTe.DynamicPDF.Printing
            	Imports System.Drawing
            
            	Module MyModule
            		Sub Main()
            			' Create a print job containing the first four pages of the PDF.
            			Dim printJob As New PrintJob(Printer.[Default], "C:\MyDocument.pdf", 1, 4)
            
            			' Creating the object of MultipagePageScaling.
            			Dim multipagePageScaling As New MultipagePageScaling(4, 2)
            
            			' Setting the border and its color.
            			multipagePageScaling.Border = New Border(Color.Green, 2)
            
            			' Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = New ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5)
            
            			' Setting the spacing between pages.
            			multipagePageScaling.Spacing = New Spacing(2, 2)
            
            			' If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = True
            
            			' Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling
            
            			' Print the job.
            			printJob.Print()
            		End Sub
            	End Module
             </code>
             <code lang="C#">
            	using System;
            	using ceTe.DynamicPDF.Printing;
            	using System.Drawing;
            
            	class MyClass
            	{
            		static void Main()
            		{
            			// Create a print job containing the first four pages of the PDF.
            			PrintJob printJob = new PrintJob(Printer.Default, @"C:\MyDocument.pdf", 1, 4);
            
            			// Creating the object of MultipagePageScaling.
            			MultipagePageScaling multipagePageScaling = new MultipagePageScaling(4, 2);
            
            			// Setting the border and its color.
            			multipagePageScaling.Border = new Border(Color.Green, 2);
            
            			// Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = new ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5);
            
            			// Setting the spacing between pages.
            			multipagePageScaling.Spacing = new Spacing(2, 2);
            
            			// If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = true;
            
            			// Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling;
            
            			// Print the job.
            			printJob.Print();
            		}
            	}
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.MultipagePageScaling.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.MultipagePageScaling"/> class.
            </summary>
            <param name="row">The Number of rows in the print page.</param>
            <param name="column">The number of columns in the print page.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.RowCount">
            <summary>
            Gets or sets number of rows in the print page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.ColumnCount">
            <summary>
            Gets or sets number of columns in the print page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.UniformScaling">
            <summary>
            Gets or sets a value indicating weather all pages should be scaled uniformly.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.Margin">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.Margin"/> of the print page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.Spacing">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.Spacing"/> between the PDF pages in the print page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.Border">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.Printing.MultipagePageScaling.Border"/> of the PDF pages in the print page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.OrientationType">
             <summary>
             Represents the type of orientation.
             </summary>
             <example>The following examples creates a print job, sets the orientation and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the orientation
                     MyPrintJob.PrintOptions.Orientation = OrientationType.Landscape
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the orientation
                     printJob.PrintOptions.Orientation = OrientationType.Landscape;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.OrientationType.Auto">
            <summary>Automatically select the orientation based on the page and the output paper sizes.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.OrientationType.Portrait">
            <summary>Portrait orientation.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.OrientationType.Landscape">
            <summary>Landscape orientation.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PageOrientation">
             <summary>
             Represents the page orientation.
             </summary>
             <example>The following examples creates a print job, sets the orientation and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job containing the first four pages of the PDF
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf", 1, 4)
            
                     ' Set the orientation for the print job
                     MyPrintJob.PrintOptions.Orientation.Type = OrientationType.Landscape
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job containing the first four pages of the PDF
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf", 1, 4);
            
                     // Set the orientation for the print job
                     printJob.PrintOptions.Orientation.Type = OrientationType.Landscape;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PageOrientation.Type">
            <summary>
            Gets or sets the orientation type for the page to be printed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PageOrientation.Rotated">
            <summary>
            Gets or sets the value indicating if the page is to be rotated 180 degrees.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PageScaling">
             <summary>
             Represents the scaling  for the page to be printed.
             </summary>
             <example>The following examples creates a print job, sets the scaling property to actual size and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the scaling
                     MyPrintJob.PrintOptions.Scaling = PageScaling.ActualSize	
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the scaling
                     printJob.PrintOptions.Scaling = PageScaling.ActualSize;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PageScaling.ActualSize">
            <summary>
            Gets the actual scaling size for the page to be print.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PaperSize">
             <summary>
             Represents a paper.
             </summary>
             <example>The following examples creates a print job, sets the paper size and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Get a paper size from the list
                     Dim MyPaperSize As PaperSize = MyPrintJob.Printer.PaperSizes.Letter
            
                     ' Set the paper size if it is supported by the printer
                     If (Not MyPaperSize Is Nothing) Then
                         MyPrintJob.PrintOptions.PaperSize = MyPaperSize
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Get a paper size from the list
                     PaperSize paperSize = printJob.Printer.PaperSizes.Letter;
            
                     // Set the paper size if it is supported by the printer
                     if (paperSize != null)
                     {
                         printJob.PrintOptions.PaperSize = paperSize;
                     }
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSize.Height">
            <summary>
            Gets the height of the paper.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSize.Name">
            <summary>
            Gets the name of the paper size.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSize.Width">
            <summary>
            Gets the width of the paper.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSize.DeviceContextPaper">
            <summary>
            Gets the value of the paper size from DC_PAPERS array.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PaperSizeList">
             <summary>
             Represents a list of papers.
             </summary>
             <example>The following examples creates a print job, sets the paper size and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Get the list of available paper sizes for the printer
                     Dim MyPaperSizes As PaperSizeList = MyPrintJob.Printer.PaperSizes
            
                     ' Set the paper size
                     MyPrintJob.PrintOptions.PaperSize = MyPaperSizes(0)
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Get the list of available paper sizes for the printer
                     PaperSizeList paperSizes = printJob.Printer.PaperSizes;
            
                     // Set the paper size
                     printJob.PrintOptions.PaperSize = paperSizes[0];
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PaperSize"/> object by index.
            </summary>
            <param name="index">The index of the paper size to be returned.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Item(System.String)">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PaperSize"/> object by name.
            </summary>
            <param name="name">The name of the paper size to be returned.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Count">
            <summary>
            Gets the number of paper sources in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Letter">
            <summary>
            Gets the US Letter paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Legal">
            <summary>
            Gets the US Legal paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Size9By11">
            <summary>
            Gets the paper size 9 by 11 if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Size10By11">
            <summary>
            Gets the paper size 10 by 11 if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Size10By14">
            <summary>
            Gets the paper size 10 by 14 if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Size15By11">
            <summary>
            Gets the paper size 15 by 11 if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Size11By17">
            <summary>
            Gets the paper size 11 by 17 if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Size12By11">
            <summary>
            Gets the paper size 12 by 11 if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A2">
            <summary>
            Gets the A2 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A3">
            <summary>
            Gets the A3 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A3Extra">
            <summary>
            Gets the A3 extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A3ExtraTransverse">
            <summary>
            Gets the A3 extra transverse paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A3Rotated">
            <summary>
            Gets the A3 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A3Transverse">
            <summary>
            Gets the A3 transverse paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A4">
            <summary>
            Gets the A4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A4Extra">
            <summary>
            Gets the A4 extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A4Plus">
            <summary>
            Gets the A4 plus paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A4Rotated">
            <summary>
            Gets the A4 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A4Small">
            <summary>
            Gets the A4 small paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A4Transverse">
            <summary>
            Gets the A4 transverse paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A5">
            <summary>
            Gets the A5 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A5Extra">
            <summary>
            Gets the A5 extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A5Rotated">
            <summary>
            Gets the A5 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A5Transverse">
            <summary>
            Gets the A5 transverse paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A6">
            <summary>
            Gets the A6 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.A6Rotated">
            <summary>
            Gets the A6 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.APlus">
            <summary>
            Gets the A plus paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B4">
            <summary>
            Gets the B4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B4JisRotated">
            <summary>
            Gets the B4 JIS rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B5">
            <summary>
            Gets the B5 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B5Extra">
            <summary>
            Gets the B5 extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B5JisRotated">
            <summary>
            Gets the B5 JIS rotated paper size '' if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B6Jis">
            <summary>
            Gets the B6 JIS paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.B6JisRotated">
            <summary>
            Gets the B6 JIS rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.BPlus">
            <summary>
            Gets the B plus paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.CSheet">
            <summary>
            Gets the C sheet paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.DblJapanesePostcard">
            <summary>
            Gets the double Japanese postcard paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.DblJapanesePostcardRotated">
            <summary>
            Gets the double Japanese postcard rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.DSheet">
            <summary>
            Gets the D sheet paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Envelope9">
            <summary>
            Gets the envelope 9 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Envelope10">
            <summary>
            Gets the envelope 10 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Envelope11">
            <summary>
            Gets the envelope 11 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Envelope12">
            <summary>
            Gets the envelope 12 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Envelope14">
            <summary>
            Gets the envelope 14 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeC5">
            <summary>
            Gets the envelope C5 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeC3">
            <summary>
            Gets the envelope C3 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeC4">
            <summary>
            Gets the envelope C4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeC6">
            <summary>
            Gets the envelope C6 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeC65">
            <summary>
            Gets the envelope C65 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeB4">
            <summary>
            Gets the envelope B4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeB5">
            <summary>
            Gets the envelope B5 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeB6">
            <summary>
            Gets the envelope B6 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeDL">
            <summary>
            Gets the envelope DL paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeInvite">
            <summary>
            Gets the envelope invite paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeItaly">
            <summary>
            Gets the envelope Italy paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopeMonarch">
            <summary>
            Gets the envelope monarch paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.EnvelopePersonal">
            <summary>
            Gets the envelope personal paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.ESheet">
            <summary>
            Gets the E sheet paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Executive">
            <summary>
            Gets the executive paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.FanfoldUs">
            <summary>
            Gets the US fanfold paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.FanfoldStandardGerman">
            <summary>
            Gets the German fanfold standard paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.FanfoldLegalGerman">
            <summary>
            Gets the German fanfold legal paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Folio">
            <summary>
            Gets the folio paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.IsoB4">
            <summary>
            Gets the ISO B4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapanesePostcard">
            <summary>
            Gets the Japanese postcard paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapanesePostcardRotated">
            <summary>
            Gets the Japanese postcard rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeChou3">
            <summary>
            Gets the Japanese envelope Chou 3 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeChou3Rotated">
            <summary>
            Gets the Japanese envelope Chou 3 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeChou4">
            <summary>
            Gets the Japanese envelope Chou 4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeChou4Rotated">
            <summary>
            Gets the Japanese envelope Chou 4 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeKaku2">
            <summary>
            Gets the Japanese envelope Kaku 2 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeKaku2Rotated">
            <summary>
            Gets the Japanese envelope Kaku 2 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeKaku3">
            <summary>
            Gets the Japanese envelope Kaku 3 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeKaku3Rotated">
            <summary>
            Gets the Japanese envelope Kaku 3 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeYou4">
            <summary>
            Gets the Japanese envelope You 4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.JapaneseEnvelopeYou4Rotated">
            <summary>
            Gets the Japanese envelope You 4 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Last">
            <summary>
            Gets the last paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Ledger">
            <summary>
            Gets the ledger paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.LegalExtra">
            <summary>
            Gets the legal extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.LetterExtra">
            <summary>
            Gets the letter extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.LetterExtraTransverse">
            <summary>
            Gets the letter extra transverse paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.LetterRotated">
            <summary>
            Gets the letter rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.LetterSmall">
            <summary>
            Gets the letter small paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.LetterTransverse">
            <summary>
            Gets the letter transverse paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Note">
            <summary>
            Gets the note paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Prc16K">
            <summary>
            Gets the PRC 16K paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Prc16KRotated">
            <summary>
            Gets the PRC 16K rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Prc32K">
            <summary>
            Gets the PRC 32K paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Prc32KRotated">
            <summary>
            Gets the PRC 32K rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Prc32KBig">
            <summary>
            Gets the PRC 32K big paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Prc32KBigRotated">
            <summary>
            Gets the PRC 32K big rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope1">
            <summary>
            Gets the PRC envelope 1 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope1Rotated">
            <summary>
            Gets the PRC envelope 1 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope2">
            <summary>
            Gets the PRC envelope 2 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope2Rotated">
            <summary>
            Gets the PRC envelope 2 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope3">
            <summary>
            Gets the PRC envelope 3 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope3Rotated">
            <summary>
            Gets the PRC envelope 3 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope4">
            <summary>
            Gets the PRC envelope 4 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope4Rotated">
            <summary>
            Gets the PRC envelope 4 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope5">
            <summary>
            Gets the PRC envelope 5 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope5Rotated">
            <summary>
            Gets the PRC envelope 5 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope6">
            <summary>
            Gets the PRC envelope 6 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope6Rotated">
            <summary>
            Gets the PRC envelope 6 rotated size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope7">
            <summary>
            Gets the PRC envelope 7 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope7Rotated">
            <summary>
            Gets the PRC envelope 7 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope8">
            <summary>
            Gets the PRC envelope 8 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope8Rotated">
            <summary>
            Gets the PRC envelope 8 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope9">
            <summary>
            Gets the PRC envelope 9 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope9Rotated">
            <summary>
            Gets the PRC envelope 9 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope10">
            <summary>
            Gets the PRC envelope 10 paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.PrcEnvelope10Rotated">
            <summary>
            Gets the PRC envelope 10 rotated paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Quarto">
            <summary>
            Gets the quarto paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Statement">
            <summary>
            Gets the statement paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.Tabloid">
            <summary>
            Gets the tabloid paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSizeList.TabloidExtra">
            <summary>
            Gets the tabloid extra paper size if it is specified by the printer.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PaperSizeList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>enumerator to the <see cref="T:ceTe.DynamicPDF.Printing.PaperSizeList"/></returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PaperSource">
             <summary>
             Represents the paper source.
             </summary>
             <example>The following examples creates a print job, sets the paper source and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            				
                     ' Get a paper source from the list
                     Dim MyPaperSource As PaperSource = MyPrintJob.Printer.PaperSources.Automatic
            
                     ' Set the paper source if it is supported by the printer
                     If (Not MyPaperSource Is Nothing) Then
                         MyPrintJob.PrintOptions.PaperSource = MyPaperSource
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Get a paper source from the list
                     PaperSource paperSource = printJob.Printer.PaperSources.Automatic;
            
                     // Set the paper source if it is supported by the printer
                     if (paperSource != null)
                     {
                         printJob.PrintOptions.PaperSource = paperSource;
                     }
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSource.Name">
            <summary>
            Gets the paper source name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSource.DeviceContextBin">
            <summary>
            Gets the value of the paper source from DC_BINS array.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PaperSourceList">
             <summary>
             Represents a list of paper sources.
             </summary>
             <example>The following examples creates a print job, sets the paper source and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            				
                     ' Get the list of available paper sources for the printer
                     Dim MyPaperSourceList As PaperSourceList = MyPrintJob.Printer.PaperSources
            
                     ' Set the paper source if it is supported by the printer
                     If (Not MyPaperSourceList.Automatic Is Nothing) Then
                         MyPrintJob.PrintOptions.PaperSource = MyPaperSourceList.Automatic
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Get the list of available paper sources for the printer
                     PaperSourceList paperSourceList = printJob.Printer.PaperSources;
            
                     // Set the paper source if it is supported by the printer
                     if (paperSourceList.Automatic != null)
                     {
                         printJob.PrintOptions.PaperSource = paperSourceList.Automatic;
                     }
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PaperSource"/> object by index.
            </summary>
            <param name="index">The index of the paper source to be returned.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Item(System.String)">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PaperSource"/> object by name.
            </summary>
            <param name="name">The name of the paper source to be returned.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Count">
            <summary>
            Gets the number of paper sources in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Automatic">
            <summary>
            Gets the 'Automatic' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Cassette">
            <summary>
            Gets the 'Cassette' paper source if it is supported by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Envelope">
            <summary>
            Gets the 'Envelope' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.EnvelopeManual">
            <summary>
            Gets the 'EnvelopeManual' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.First">
            <summary>
            Gets the 'First' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.FormSource">
            <summary>
            Gets the 'FormSource' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.LargeCapacity">
            <summary>
            Gets the 'LargeCapacity' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.LargeFormat">
            <summary>
            Gets the 'LargeFormat' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Last">
            <summary>
            Gets the 'Last' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Lower">
            <summary>
            Gets the 'Lower' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Manual">
            <summary>
            Gets the 'Manual' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Middle">
            <summary>
            Gets the 'Middle' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.OnlyOne">
            <summary>
            Gets the 'OnlyOne' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Tractor">
            <summary>
            Gets the 'Tractor' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.SmallFormat">
            <summary>
            Gets the 'SmallFormat' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PaperSourceList.Upper">
            <summary>
            Gets the 'Upper' paper source if it is specified by the printer.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PaperSourceList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>enumerator to the <see cref="T:ceTe.DynamicPDF.Printing.PaperSourceList"/></returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PercentagePageScaling">
             <summary>
             Represents the class that allows to specify page scaling size in percentage.
             </summary>
             <example>The following examples creates a print job, sets the page scaling and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            				
                     'Create a PercentagePageScaling object with a scaling factor of 0.1 to specify 10% scaling.
                     Dim MyPercentagePageScaling As PercentagePageScaling = New PercentagePageScaling(10.0F)
            
                     ' Set the scaling
                     MyPrintJob.PrintOptions.Scaling = MyPercentagePageScaling
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Create a PercentagePageScaling object with a scaling factor of 0.1 to specify 10% scaling.
                     PercentagePageScaling percentagePageScaling = new PercentagePageScaling(10f);
            
                     // Set the scaling
                     printJob.PrintOptions.Scaling = percentagePageScaling;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PercentagePageScaling.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PercentagePageScaling"/> class.
            </summary>
            <param name="scale">A value between 0 to 1 to specify page scaling factor.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PercentagePageScaling.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PercentagePageScaling"/> class.
            </summary>
            <param name="scaleX">A value between 0 to 1 to specify horizontal page scaling factor.</param>
            <param name="scaleY">A value between 0 to 1 to specify vertical page scaling factor.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PercentagePageScaling.ScaleX">
            <summary>
            Gets the horizontal page scaling in percentage.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PercentagePageScaling.ScaleY">
            <summary>
            Gets the vertical page scaling in percentage.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.Printer">
             <summary>
             Represents a printer that can be used for print jobs.
             </summary>
             <example>The following examples creates a print job using a Printer object, sets print job print options based on the Printer object and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a printer using its name
                     Dim MyPrinter As Printer = New Printer("PrinterName")
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob(MyPrinter, "C:\MyDocument.pdf")
               
                     ' Set the collating if it is supported by the printer
                     If (MyPrinter.Collate) Then
                         MyPrintJob.PrintOptions.Collate = True
                     End If
            
                     ' Set the color if it is supported by the printer
                     If (MyPrinter.Color) Then
                         MyPrintJob.PrintOptions.Color = True
                     End If
            
                     ' Set the duplex  printing if it is supported by the printer
                     If (MyPrinter.Duplex) Then
                         MyPrintJob.PrintOptions.DuplexMode = DuplexMode.DuplexHorizontal
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a printer using its name
                     Printer printer = new Printer("PrinterName");
            
                     // Create a print job
                     PrintJob printJob = new PrintJob(printer, @"C:\MyDocument.pdf");
            
                     // Set the collating if it is supported by the printer
                     if (printer.Collate)
                     {
                         printJob.PrintOptions.Collate = true;
                     }
            
                     // Set the color if it is supported by the printer
                     if (printer.Color)
                     {
                         printJob.PrintOptions.Color = true;
                     }
            
                     // Set the duplex  printing if it is supported by the printer
                     if (printer.Duplex)
                     {
                         printJob.PrintOptions.DuplexMode = DuplexMode.DuplexHorizontal;
                     }
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Printer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.Printer"/> class.
            </summary>
            <param name="printerName">The name of the printer.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Collate">
            <summary>
            Gets a value indicating if the printer supports collating.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Color">
            <summary>
            Gets a value indicating if the printer supports color printing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Default">
            <summary>
            Gets the system's default printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Duplex">
            <summary>
            Gets a value indicating if the printer supports duplex printing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Fax">
            <summary>
            Gets a value indicating if the printer supports fax printing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.MaxCopies">
            <summary>
            Gets the maximum number of copies supported by the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.MaxPaperHeight">
            <summary>
            Gets the maximum paper height supported by the printer in typesetting points.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.MaxPaperWidth">
            <summary>
            Gets the maximum paper width supported by the printer in typesetting points.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.MinPaperHeight">
            <summary>
            Gets the minimum paper height supported by the printer in typesetting points.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.MinPaperWidth">
            <summary>
            Gets the minimum paper width supported by the printer in typesetting points.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Name">
            <summary>
            Gets the name of the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.PaperSizes">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PaperSizeList"/> object that represents the available paper sizes for the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.PaperSources">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PaperSourceList"/> object that represents the available paper sources (trays) for the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.MediaTypes">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.MediaTypeList"/> object that represents the available media types for the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.Resolutions">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.ResolutionList"/> object that represents the available resolutions for the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.DriverVersion">
            <summary>
            Gets the version of the printer driver.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Printer.DriverName">
            <summary>
            Gets the name of the printer driver.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Printer.GetLocalPrinters">
            <summary>
            Returns an array of the system's local printers.
            </summary>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Printing.Printer"/> objects.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Printer.Refresh">
            <summary>
            Reinitializes the printer properties in order to update any newly aaded custom paper source, size or any such customizable properties.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintFailedException">
            <summary>
            Represents a print failed exception.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintingException">
            <summary>
            Represents a exception thrown while printing.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobStartingEventHandler">
            <summary>
            Represents the method that is called before starting a job.
            </summary>
            <licensing>
            This delegate is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobFailedEventHandler">
            <summary>
            Represents the method that is called when a job fails.
            </summary>
            <licensing>
            This delegate is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobEventHandler">
            <summary>
            Represents the method that is called when a job succeeds or is updated.
            </summary>
            <licensing>
            This delegate is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJob">
             <summary>
             Represents a job that can be sent to a printer.
             </summary>
             <example>The following examples creates a  print job  and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job containing the first four pages of the PDF
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf", 1, 4)
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job containing the first four pages of the PDF
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf", 1, 4);
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="E:ceTe.DynamicPDF.Printing.PrintJob.Starting">
            <summary>
            Occurs before starting a job.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.Printing.PrintJob.Failed">
            <summary>
            Occurs when a job fails.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.Printing.PrintJob.Succeeded">
            <summary>
            Occurs when a job succeeds.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.Printing.PrintJob.Updated">
            <summary>
            Occurs when a job's status or pages printed is updated.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printer">The <see cref="P:ceTe.DynamicPDF.Printing.PrintJob.Printer"/> object targeted by the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,ceTe.DynamicPDF.Printing.InputPdf)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printer">The <see cref="P:ceTe.DynamicPDF.Printing.PrintJob.Printer"/> object targeted by the print job.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,ceTe.DynamicPDF.Printing.InputPdf,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printer">The <see cref="P:ceTe.DynamicPDF.Printing.PrintJob.Printer"/> object targeted by the print job.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printer">The <see cref="P:ceTe.DynamicPDF.Printing.PrintJob.Printer"/> object targeted by the print job.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(ceTe.DynamicPDF.Printing.Printer,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printer">The <see cref="P:ceTe.DynamicPDF.Printing.PrintJob.Printer"/> object targeted by the print job.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printerName">The name of the printer targeted by the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(System.String,ceTe.DynamicPDF.Printing.InputPdf)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printerName">The name of the printer targeted by the print job.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(System.String,ceTe.DynamicPDF.Printing.InputPdf,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printerName">The name of the printer targeted by the print job.</param>
            <param name="inputPdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> object containing the pages to be added to the print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printerName">The name of the printer targeted by the print job.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> class.
            </summary>
            <param name="printerName">The name of the printer targeted by the print job.</param>
            <param name="pdfFileName">The file path to the PDF containing the pages to be added to the print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.DocumentName">
            <summary>
            Gets or sets the name of the document that is to be shown in the print spooler.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.JobId">
            <summary>
            Gets the ID of the job.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.Pages">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPageList"/> object that represents the pages to be printed by the job.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.PagesPrinted">
            <summary>
            Gets a value indicating how many pages have been printed.
            </summary>
            <remarks>
            This property is dependent on the printer driver to update the value. It is not generally accurate when printing to network printers.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.Printer">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Printing.Printer"/> object that is targeted by the job.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.PrintOptions">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPrintOptions"/> objects that represents the printing options for the job.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.Status">
            <summary>
            Gets the current status of the job.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.RawStatus">
            <summary>
            RawStatus represents the status as returned by the printer driver. 
            It may have multiple bits set at the same time which means it 
            can represent multiple values from the <see cref="T:ceTe.DynamicPDF.Printing.PrintJobStatus"/> enumeration.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.PrintToFileName">
            <summary>
            Gets or sets the  filename or path where the output will be saved.
            </summary>
            <remarks>
            If this property is set with a valid filename, raw printer data will be saved instead of actual printing.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.AddLicense(System.String)">
            <summary>
            Adds a license key.
            </summary>
            <param name="licenseKey">The license key to add.</param>
            <returns>A boolean value indicating if the license key is valid.</returns>
            <remarks>This method accepts a license key, not a serial number.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.Print">
            <summary>
            Prints the job to the printer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJob.PrintPriority">
            <summary>
            Gets or sets the Print priority of print job. Enter the value in between the Range(1 - 99).
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJob.Finalize">
            <summary>
            Releases resources used by the <see cref="T:ceTe.DynamicPDF.Printing.PrintJob"/> object.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobEventArgs">
            <summary>
            Represents the print job event's arguments.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobEventArgs.PrintJob">
            <summary>
            Gets the print job that caused the event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobFailedEventArgs">
            <summary>
            Represents the print job failed event's arguments.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobFailedEventArgs.Exception">
            <summary>
            Gets the exception thrown.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobFailedEventArgs.PrintJob">
            <summary>
            Gets the print job that caused the event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobPage">
             <summary>
             Represents a page of pdf added to the print job.
             </summary>
             <example>The following examples creates a  print job, sets print options on the last page and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job containing the first four pages of the PDF
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf", 1, 4)
            
                     ' Get the last page and set its print options
                     Dim MyPrintJobPage As PrintJobPage = MyPrintJob.Pages(MyPrintJob.Pages.Count - 1)
                     MyPrintJobPage.PrintOptions.Inherit = False
                     MyPrintJobPage.PrintOptions.HorizontalAlign = HorizontalAlign.Right
                     MyPrintJobPage.PrintOptions.Orientation.Type = OrientationType.Landscape
                     MyPrintJobPage.PrintOptions.PrintAnnotations = True
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job containing the first four pages of the PDF
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf", 1, 4);
            
                     // Get the last page and set its print options
                     PrintJobPage printJobPage = printJob.Pages[printJob.Pages.Count - 1];
                     printJobPage.PrintOptions.Inherit = false;
                     printJobPage.PrintOptions.HorizontalAlign = HorizontalAlign.Right;
                     printJobPage.PrintOptions.Orientation.Type = OrientationType.Landscape;
                     printJobPage.PrintOptions.PrintAnnotations = true;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPage.InputPdfPage">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPage.InputPdfPage"/> object that represents the PDF page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPage.PrintOptions">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions"/> object that represents print options for the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobPageList">
             <summary>
             Represents a list of pdf pages added to the print job.
             </summary>
             <example>The following examples creates a  print job, sets print options for the last page and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job containing the first four pages of the PDF
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf", 1, 4)
            
                     ' Get the list of pages in the print job
                     Dim MyPrintJobPageList As PrintJobPageList = MyPrintJob.Pages
            
                     ' Get the last page and set its print options
                     Dim MyPrintJobPage As PrintJobPage = MyPrintJobPageList(MyPrintJobPageList.Count - 1)
                     MyPrintJobPage.PrintOptions.Inherit = False
                     MyPrintJobPage.PrintOptions.HorizontalAlign = HorizontalAlign.Right
                     MyPrintJobPage.PrintOptions.Orientation.Type = OrientationType.Landscape
                     MyPrintJobPage.PrintOptions.PrintAnnotations = True
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job containing the first four pages of the PDF
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf", 1, 4);
            
                     // Get the list of pages in the print job
                     PrintJobPageList printjobPageList = printJob.Pages;
            
                     // Get the last page and set its print options
                     PrintJobPage printJobPage = printjobPageList[printjobPageList.Count - 1];
                     printJobPage.PrintOptions.Inherit = false;
                     printJobPage.PrintOptions.HorizontalAlign = HorizontalAlign.Right;
                     printJobPage.PrintOptions.Orientation.Type = OrientationType.Landscape;
                     printJobPage.PrintOptions.PrintAnnotations = true;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPageList.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPage"/> object by index.
            </summary>
            <param name="index">The index of the page to be returned.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPageList.Count">
            <summary>
            Gets the value indicating the number of pages in a list.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(ceTe.DynamicPDF.Printing.InputPdf)">
            <summary>
            Add all the pages of a PDF to the list.
            </summary>
            <param name="pdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> containing the pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(ceTe.DynamicPDF.Printing.InputPdf,System.Int32,System.Int32)">
            <summary>
            Add pdf to the list.
            </summary>
            <param name="pdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> containing the pages to be added to the print job.</param>
            <param name="startPage">The first page from the <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(ceTe.DynamicPDF.Printing.InputPdfPage)">
            <summary>
            Add pdf page <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPage"/>.
            </summary>
            <param name="page">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdfPage"/> object to be added to the print job.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPage"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(System.String)">
            <summary>
            Add a pdf document .
            </summary>
            <param name="pdfFilePath">The file path to the PDF to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(System.String,System.Int32)">
            <summary>
            Add a pdf document .
            </summary>
            <param name="pdfFilePath">The file path to the PDF to be added to the print job.</param>
            <param name="pageNumber">The page number of the page to be added to the print job.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPage"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(System.String,System.Int32,System.Int32)">
            <summary>
            Add a pdf document .
            </summary>
            <param name="pdfFilePath">The file path to the PDF to be added to the print job.</param>
            <param name="startPage">The first page from the PDF to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(ceTe.DynamicPDF.Printing.InputPdf,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Add a pdf document .
            </summary>
            <param name="pdf">The <see cref="T:ceTe.DynamicPDF.Printing.InputPdf"/> containing the pages to be added to the print job.</param>
            <param name="rect">The rect represents the partial page to be printed.</param>
            <param name="startPage">The first page from the PDF to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.Add(System.String,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Add a pdf document .
            </summary>
            <param name="pdfFilePath">The file path to the PDF to be added to the print job.</param>
            <param name="rect">The rect represents the partial page to be printed.</param>
            <param name="startPage">The first page from the PDF to be added to the print job.</param>
            <param name="pageCount">The number of pages to be added to the print job.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPageList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>enumerator to the <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPageList"/></returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions">
             <summary>
             Represents print options for the page to be added to the print job.
             </summary>
             <example>The following examples creates a print job, sets print options for the last page and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job containing the first four pages of the PDF
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf", 1, 4)
            
                     ' Get the last page and set its print options
                     Dim MyPrintJobPage As PrintJobPage = MyPrintJob.Pages(MyPrintJob.Pages.Count - 1)
                     Dim MyPagePrintOptions As PrintJobPagePrintOptions = MyPrintJobPage.PrintOptions
                     MyPagePrintOptions.Inherit = False
                     MyPagePrintOptions.HorizontalAlign = HorizontalAlign.Left
                     MyPagePrintOptions.PrintAnnotations = False
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job containing the first four pages of the PDF
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf", 1, 4);
            
                     // Get the last page and set its print options
                     PrintJobPage printJobPage = printJob.Pages[printJob.Pages.Count - 1];
                     PrintJobPagePrintOptions pagePrintOptions = printJobPage.PrintOptions;
                     pagePrintOptions.Inherit = false;
                     pagePrintOptions.HorizontalAlign = HorizontalAlign.Left;
                     pagePrintOptions.PrintAnnotations = false;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit">
            <summary>
            Gets or sets the value indicating if the print options should be inherited from the print job.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Orientation">
            <summary>
            Gets or sets the page orientation for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.PaperSize">
            <summary>
            Gets or sets the paper size for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.PaperSource">
            <summary>
            Gets or sets the paper source for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.MediaType">
            <summary>
            Gets or sets the media type for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.PrintAnnotations">
            <summary>
            Gets or sets the value indicating it PDF annotations should be printed for this page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Scaling">
            <summary>
            Gets or sets the scaling size for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment for the page.
            </summary>
            <remarks>You must set the <see cref="P:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.Inherit"/> property to false before setting this property.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.SetPaperSizeByName(System.String)">
            <summary>
            Sets the paper size by name for the page.
            </summary>
            <param name="name">String containing paper size.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.SetPaperSourceByName(System.String)">
            <summary>
            Sets the paper source by name for the page.
            </summary>
            <param name="name">String containing paper source.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPagePrintOptions.SetMediaTypeByName(System.String)">
            <summary>
            Sets the media type by name for the page.
            </summary>
            <param name="name">The name of the media type to set.</param>
            <returns>A boolean value indicating if the media type name is valid for this printer.</returns>
            <remarks>If the specified media type is not supported by the printer, the media type will not be changed and this method will return false.</remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobPrintOptions">
             <summary>
             Represents the printing options for a job.
             </summary>
             <example>The following examples creates a  print job, sets print options and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set all the print options
                     If (MyPrintJob.Printer.Color) Then ' If the printer supports color printing
                         MyPrintJob.PrintOptions.Color = True
                     End If
                     If (MyPrintJob.Printer.Duplex) Then ' If the printer supports duplex printing
                         MyPrintJob.PrintOptions.DuplexMode = DuplexMode.DuplexVertical
                     End If
                     MyPrintJob.PrintOptions.Copies = 1
                     MyPrintJob.PrintOptions.HorizontalAlign = HorizontalAlign.Left
                     MyPrintJob.PrintOptions.PrintAnnotations = False
                     MyPrintJob.PrintOptions.Scaling = PageScaling.ActualSize
                     MyPrintJob.PrintOptions.SetPaperSizeByName("Legal")
                     MyPrintJob.PrintOptions.SetPaperSourceByName("Tray 2")
                     MyPrintJob.PrintOptions.SetResolutionByDpi(300)
                     MyPrintJob.PrintOptions.VerticalAlign = VerticalAlign.Top
             
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
              
                     // Set all the print options
                     if (printJob.Printer.Color) // If the printer supports color printing
                     {
                         printJob.PrintOptions.Color = true;
                     }
                     if (printJob.Printer.Duplex) // If the printer supports duplex printing
                     {
                         printJob.PrintOptions.DuplexMode = DuplexMode.DuplexVertical;
                     }
                     printJob.PrintOptions.Copies = 1;
                     printJob.PrintOptions.HorizontalAlign = HorizontalAlign.Left;
                     printJob.PrintOptions.PrintAnnotations = false;
                     printJob.PrintOptions.Scaling = PageScaling.ActualSize;
                     printJob.PrintOptions.SetPaperSizeByName("Legal");
                     printJob.PrintOptions.SetPaperSourceByName("Tray 2");
                     printJob.PrintOptions.SetResolutionByDpi(300);
                     printJob.PrintOptions.VerticalAlign = VerticalAlign.Top;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Finalize">
            <summary>
            Releases resources used by the <see cref="T:ceTe.DynamicPDF.Printing.PrintJobPrintOptions"/> object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Collate">
            <summary>
            Gets or sets a value indicating if the job's copies should be collated.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Color">
            <summary>
            Gets or sets a value indicating if the job should printed in color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Copies">
            <summary>
            Gets or sets a value indicating the number of copies to print.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.DuplexMode">
            <summary>
            Gets or sets a value indicating the duplex mode to use when printing the pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.HorizontalAlign">
            <summary>
            Gets or sets a value indicating the horizontal alignment to use when printing the pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Orientation">
            <summary>
            Gets a value indicating the orientation to use when printing the pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.PaperSize">
            <summary>
            Gets or sets a value indicating the size of paper to use when printing the pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.PrintAnnotations">
            <summary>
            Gets or sets a value indicating if annotations from the PDF should be printed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.PaperSource">
            <summary>
            Gets or sets a value indicating the paper source (tray) to use when printing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.MediaType">
            <summary>
            Gets or sets a value indicating the media type to use when printing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Resolution">
            <summary>
            Gets or sets a value indicating the resolution to use when printing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.VerticalAlign">
            <summary>
            Gets or sets a value indicating the vertical alignment to use when printing the pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Scaling">
            <summary>
            Gets or sets a value indicating the page scaling to use when printing the pages.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.SetPaperSizeByName(System.String)">
            <summary>
            Sets the size of paper to use based on its name.
            </summary>
            <param name="name">The name of the paper size to set.</param>
            <returns>A boolean value indicating if the paper size name is valid for this printer.</returns>
            <remarks>If the specified paper size is not supported by the printer, the paper size will not be changed and this method will return false.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.SetPaperSourceByName(System.String)">
            <summary>
            Sets the paper source (tray) to use based on its name.
            </summary>
            <param name="name">The name of the paper source (tray) to set.</param>
            <returns>A boolean value indicating if the paper source (tray) name is valid for this printer.</returns>
            <remarks>If the specified paper source (tray) is not supported by the printer, the paper source (tray) will not be changed and this method will return false.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.SetMediaTypeByName(System.String)">
            <summary>
            Sets the media type to use based on its name.
            </summary>
            <param name="name">The name of the media type to set.</param>
            <returns>A boolean value indicating if the media type name is valid for this printer.</returns>
            <remarks>If the specified media type is not supported by the printer, the media type will not be changed and this method will return false.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.SetResolutionByDpi(System.Int32)">
            <summary>
            Sets the resolution to use based on its DPI.
            </summary>
            <param name="dpi">The horizontal and vertical DPI to set.</param>
            <returns>A boolean value indicating if the DPI is valid for this printer.</returns>
            <remarks>If the specified DPI is not supported by the printer, the DPI will not be changed and this method will return false.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.SetResolutionByDpi(System.Int32,System.Int32)">
            <summary>
            Sets the resolution to use based on its DPI.
            </summary>
            <param name="horizontalDpi">The horizontal DPI to set.</param>
            <param name="verticalDpi">The vertical DPI to set.</param>
            <returns>A boolean value indicating if the DPI is valid for this printer.</returns>
            <remarks>If the specified DPI is not supported by the printer, the DPI will not be changed and this method will return false.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.PrintJobPrintOptions.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobStartingEventArgs">
            <summary>
            Represents the print job starting event's arguments.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobStartingEventArgs.PrintJob">
            <summary>
            Gets the print job that caused the event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobStartingEventArgs.DevMode">
            <summary>
            Gets the pointer to the printer's DEVMODE strucutre.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobStartingEventArgs.DevModeSize">
            <summary>
            Gets the size, in bytes, of the DEVMODE structure, not including any private driver specific data that might follow the structure's public members.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.PrintJobStartingEventArgs.DevModeDriverExtra">
            <summary>
            Gets the number of bytes of private driver data that follows DEVMODE structure's public members.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.PrintJobStatus">
            <summary>
            Represents the status of print.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.None">
            <summary>
            Indicates that a print job has not started.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Paused">
            <summary>
            Indicates that a print job is paused.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Error">
            <summary>
            Indicates that an error occurred while printing.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Deleting">
            <summary>
            Indicates that a print job is being deleted.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Spooling">
            <summary>
            Indicates that a print job is spooling.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Printing">
            <summary>
            Indicates that a print job is printing.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.PrinterOffline">
            <summary>
            Indicates that a printer is offline.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.PrinterOutOfPaper">
            <summary>
            Indicates that a printer is out of paper.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Printed">
            <summary>
            Indicates that a print job has printed.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Deleted">
            <summary>
            Indicates that a print job has been deleted.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.BlockedDevQ">
            <summary>
            Indicates that a print driver cannot print the job..
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.RequiresUserIntervention">
            <summary>
            Indicates that a printer has an issue that requires the user to do something.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Restarting">
            <summary>
            Indicates that a print job has been restarted.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Complete">
            <summary>
            Indicates that a print job has been sent to the printer.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.Retained">
            <summary>
            Indicates that a print job has been retained in the print queue following printing..
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.NotStarted">
            <summary>
            Indicates that a print job has not started.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.PrintJobStatus.StatusUnAvailable">
            <summary>
            Indicates that a print job's status is not available and have been removed from the printer queue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.Resolution">
             <summary>
             Represents the resolution of the printer.
             </summary>
             <example>The following examples creates a  print job, sets the resolution to 600 dpi if it is supported by the printer and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Get the 600 dpi resolution from the printer
                     Dim MyResolution As Resolution = MyPrintJob.Printer.Resolutions(600, 600)
            
                     ' Set the resolution if it is supported by the printer
                     If (Not MyResolution Is Nothing) Then
                         MyPrintJob.PrintOptions.Resolution = MyResolution
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Get the 600 dpi resolution from the printer
                     Resolution resolution = printJob.Printer.Resolutions[600, 600];
            
                     // Set the resolution if it is supported by the printer
                     if (resolution != null)
                     {
                         printJob.PrintOptions.Resolution = resolution;
                     }
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Resolution.HorizontalDpi">
            <summary>
            Gets the horizontal resolution.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Resolution.VerticalDpi">
            <summary>
            Gets the vertical resolution.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.ResolutionList">
             <summary>
             Represents a list of resolutions.
             </summary>
             <example>The following examples creates a  print job, sets resolution to 600 dpi if it is supported by the printer and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Get the list of available resolutions for the printer
                     Dim MyResolutions As ResolutionList = MyPrintJob.Printer.Resolutions
            
                     ' Set the resolution to 600 dpi if it is supported by the printer
                     If (Not MyResolutions(600, 600) Is Nothing) Then
                         MyPrintJob.PrintOptions.Resolution = MyResolutions(600, 600)
                     End If
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Get the list of available resolutions for the printer
                     ResolutionList resolutions = printJob.Printer.Resolutions;
            
                     // Get the resolution to 600 dpi if it is supported by the printer
                     if (resolutions.GetResolution(600,600) != null)
                     {
                         printJob.PrintOptions.Resolution = resolutions[600, 600];
                     }
             
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ResolutionList.Item(System.Int32)">
            <summary>
            Gets a printer resolution by index.
            </summary>
            <param name="index">The index of the resolution to be returned.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ResolutionList.Count">
            <summary>
            Gets the value indicating the number of printer resolutions in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ResolutionList.Draft">
            <summary>
            Gets the Draft quality based resolution setting.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ResolutionList.Low">
            <summary>
            Gets the Low quality based resolution setting.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ResolutionList.Medium">
            <summary>
            Gets the Medium quality based resolution setting.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ResolutionList.High">
            <summary>
            Gets the High quality based resolution setting.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.ResolutionList.GetResolution(System.Int32,System.Int32)">
            <summary>
            Gets a printer resolution by name.
            </summary>
            <param name="horizontalDpi">The horizontal DPI of the resolution to be returned.</param>
            <param name="verticalDpi">The vertical DPI of the resolution to be returned.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.ResolutionList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>enumerator to the <see cref="T:ceTe.DynamicPDF.Printing.ResolutionList"/></returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.ScaleTo">
             <summary>
             Represents the page scaling type.
             </summary>
             <example>The following examples creates a print job, sets the scaling to printable area of the page and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the scaling
                     Dim MyAutoPageScaling As AutoPageScaling = New AutoPageScaling(ScaleTo.PagePrintableArea, True, True)
                     MyPrintJob.PrintOptions.Scaling = MyAutoPageScaling
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the scaling
                     AutoPageScaling autoPageScaling = new AutoPageScaling(ScaleTo.PagePrintableArea, true, true);
                     printJob.PrintOptions.Scaling = autoPageScaling;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.ScaleTo.PagePrintableArea">
            <summary>Scale to the printable area of a page.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.ScaleTo.PageEdges">
            <summary>Scale to the edges of a page.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.ServerCoverPage">
             <summary>
             Represents a cover page.
             </summary>
             <example>The following examples creates a fax print job, sets cover page values and sends the fax.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a fax print job
                     Dim MyFaxPrintJob As FaxPrintJob = New FaxPrintJob("FaxPrinterName", "1-555-465-1177", "C:\MyDocument.pdf")
            
                     ' Add a local cover page
                     MyFaxPrintJob.FaxOptions.CoverPage = New ServerCoverPage("FileName")
            
                     ' Set the cover page values
                     MyFaxPrintJob.FaxOptions.CoverPage.Note = "Note"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCity = "RecipientCity"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCompany = "RecipientCompany"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientCountry = "RecipientCountry"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientDepartment = "RecipientDepartment"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientFaxNumber = "RecipientFaxNumber"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientHomePhone = "RecipientHomePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientName = "RecipientName"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientOfficeLocation = "RecipientOfficeLocation"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientOfficePhone = "RecipientOfficePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientState = "RecipientState"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientStreetAddress = "RecipientStreetAddress"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientTitle = "RecipientTitle"
                     MyFaxPrintJob.FaxOptions.CoverPage.RecipientZip = "RecipientZip"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderAddress = "SenderAddress"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderCompany = "SenderCompany"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderDepartment = "SenderDepartment"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderFaxNumber = "SenderFaxNumber"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderHomePhone = "SenderHomePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderName = "SenderName"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderOfficeLocation = "SenderOfficeLocation"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderOfficePhone = "SenderOfficePhone"
                     MyFaxPrintJob.FaxOptions.CoverPage.SenderTitle = "SenderTitle"
                     MyFaxPrintJob.FaxOptions.CoverPage.Subject = "Subject"
            
                     ' Send the fax
                     MyFaxPrintJob.Print()	
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a fax print job
                     FaxPrintJob faxPrintJob = new FaxPrintJob("FaxPrinterName", "1-555-465-1177", @"C:\MyDocument.pdf");
            
                     // Add a local cover page
                     faxPrintJob.FaxOptions.CoverPage = new ServerCoverPage("FileName");
            
                     // Set the cover page values
                     faxPrintJob.FaxOptions.CoverPage.Note = "Note";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCity = "RecipientCity";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCompany = "RecipientCompany";
                     faxPrintJob.FaxOptions.CoverPage.RecipientCountry = "RecipientCountry";
                     faxPrintJob.FaxOptions.CoverPage.RecipientDepartment = "RecipientDepartment";
                     faxPrintJob.FaxOptions.CoverPage.RecipientFaxNumber = "RecipientFaxNumber";
                     faxPrintJob.FaxOptions.CoverPage.RecipientHomePhone = "RecipientHomePhone";
                     faxPrintJob.FaxOptions.CoverPage.RecipientName = "RecipientName";
                     faxPrintJob.FaxOptions.CoverPage.RecipientOfficeLocation = "RecipientOfficeLocation";
                     faxPrintJob.FaxOptions.CoverPage.RecipientOfficePhone = "RecipientOfficePhone";
                     faxPrintJob.FaxOptions.CoverPage.RecipientState = "RecipientState";
                     faxPrintJob.FaxOptions.CoverPage.RecipientStreetAddress = "RecipientStreetAddress";
                     faxPrintJob.FaxOptions.CoverPage.RecipientTitle = "RecipientTitle";
                     faxPrintJob.FaxOptions.CoverPage.RecipientZip = "RecipientZip";
                     faxPrintJob.FaxOptions.CoverPage.SenderAddress = "SenderAddress";
                     faxPrintJob.FaxOptions.CoverPage.SenderCompany = "SenderCompany";
                     faxPrintJob.FaxOptions.CoverPage.SenderDepartment = "SenderDepartment";
                     faxPrintJob.FaxOptions.CoverPage.SenderFaxNumber = "SenderFaxNumber";
                     faxPrintJob.FaxOptions.CoverPage.SenderHomePhone = "SenderHomePhone";
                     faxPrintJob.FaxOptions.CoverPage.SenderName = "SenderName";
                     faxPrintJob.FaxOptions.CoverPage.SenderOfficeLocation = "SenderOfficeLocation";
                     faxPrintJob.FaxOptions.CoverPage.SenderOfficePhone = "SenderOfficePhone";
                     faxPrintJob.FaxOptions.CoverPage.SenderTitle = "SenderTitle";
                     faxPrintJob.FaxOptions.CoverPage.Subject = "Subject";
            
                     // Send the fax
                     faxPrintJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.ServerCoverPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.ServerCoverPage"/> class.
            </summary>
            <param name="name">The name of the server the cover page.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.ServerCoverPage.Name">
            <summary>
            Gets or sets the name of the the server cover page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.Spacing">
             <summary>
             Puts spacing between pages while doing the multi page print.
             </summary>
             <example>The following examples demonstrates, how to set spacing between pages while doing the multi page print.
             <code lang="VB">
            	Imports ceTe.DynamicPDF.Printing
            	Imports System.Drawing
            
            	Module MyModule
            		Sub Main()
            			' Create a print job containing the first four pages of the PDF.
            			Dim printJob As New PrintJob(Printer.[Default], "C:\MyDocument.pdf", 1, 4)
            
            			' Creating the object of MultipagePageScaling.
            			Dim multipagePageScaling As New MultipagePageScaling(4, 2)
            
            			' Setting the border and its color.
            			multipagePageScaling.Border = New Border(Color.Green, 2)
            
            			' Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = New ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5)
            
            			' Setting the spacing between pages.
            			multipagePageScaling.Spacing = New Spacing(2, 2)
            
            			' If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = True
            
            			' Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling
            
            			' Print the job.
            			printJob.Print()
            		End Sub
            	End Module
             </code>
             <code lang="C#">
            	using System;
            	using ceTe.DynamicPDF.Printing;
            	using System.Drawing;
            
            	class MyClass
            	{
            		static void Main()
            		{
            			// Create a print job containing the first four pages of the PDF.
            			PrintJob printJob = new PrintJob(Printer.Default, @"C:\MyDocument.pdf", 1, 4);
            
            			// Creating the object of MultipagePageScaling.
            			MultipagePageScaling multipagePageScaling = new MultipagePageScaling(4, 2);
            
            			// Setting the border and its color.
            			multipagePageScaling.Border = new Border(Color.Green, 2);
            
            			// Setting the top,left,bottom and right margins.
            			multipagePageScaling.Margin = new ceTe.DynamicPDF.Printing.Margin(5, 5, 5, 5);
            
            			// Setting the spacing between pages.
            			multipagePageScaling.Spacing = new Spacing(2, 2);
            
            			// If UniformScaling is true then same scaling percentage will be applied to all pages.
            			multipagePageScaling.UniformScaling = true;
            
            			// Applying the multipage scaling.
            			printJob.PrintOptions.Scaling = multipagePageScaling;
            
            			// Print the job.
            			printJob.Print();
            		}
            	}
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.Spacing.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Printing.Spacing"/> class.
            </summary>
            <param name="horizontal">The horizontal spacing between pages.</param>
            <param name="vertical">The vertical spacing between pages.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Spacing.Horizontal">
            <summary>
            Gets or sets the horizontal spacing value between pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Printing.Spacing.Vertical">
            <summary>
            Gets or sets the vertical spacing value between pages.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.UnitConverter">
            <summary>
            Utility for converting to and from typesetting points.
            </summary>
            <licensing>
            This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
            <list type="bullet">
            <item>DynamicPDF PrintManager for .NET</item>
            </list>
            </licensing>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.UnitConverter.PointsToInches(System.Double)">
            <summary>
            Converts from typesetting points to inches.
            </summary>
            <param  name="size">Size in points.</param>
            <returns>The size in inches.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.UnitConverter.PointsToMillimeters(System.Double)">
            <summary>
            Converts from typesetting points to millimeters.
            </summary>
            <param  name="size">Size in points.</param>
            <returns>The size in typesetting points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.UnitConverter.InchesToPoints(System.Double)">
            <summary>
            Converts from inches to typesetting points.
            </summary>
            <param  name="size">Size in inches.</param>
            <returns>The size in inches.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.UnitConverter.MillimetersToPoints(System.Double)">
            <summary>
            Converts from millimeters to typesetting points.
            </summary>
            <param  name="size">Size in millimeters.</param>
            <returns>The size in typesetting points.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.VerticalAlign">
             <summary>
             Represents the vertical alignment to use when printing pages.
             </summary>
             <example>The following examples creates a print job, sets the vertical align to top and prints the job.<p/>
             <code lang="VB">
             Imports System
             Imports ceTe.DynamicPDF.Printing
            
             Module MyModule
            
                 Sub Main()
            
                     ' Create a print job
                     Dim MyPrintJob As PrintJob = New PrintJob("PrinterName", "C:\MyDocument.pdf")
            
                     ' Set the vertical alignment
                     MyPrintJob.PrintOptions.VerticalAlign = VerticalAlign.Top
            
                     ' Print the job
                     MyPrintJob.Print()
                 End Sub
             End Module
             </code>
             <code lang="C#">
             using System;
             using ceTe.DynamicPDF.Printing;
            
             class MyClass
             {
                 static void Main()
                 {
                     // Create a print job
                     PrintJob printJob = new PrintJob("PrinterName", @"C:\MyDocument.pdf");
            
                     // Set the vertical alignment
                     printJob.PrintOptions.VerticalAlign = VerticalAlign.Top;
            
                     // Print the job
                     printJob.Print();
                 }
             }
             </code>
             </example>
             <licensing>
             This class is a DynamicPDF PrintManager feature. The following license is required for non-evaluation usage:
             <list type="bullet">
             <item>DynamicPDF PrintManager for .NET</item>
             </list>
             </licensing>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.VerticalAlign.Top">
            <summary>Top vertical alignment.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.VerticalAlign.Middle">
            <summary>Middle vertical alignment.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Printing.VerticalAlign.Bottom">
            <summary>Bottom vertical alignment.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Printing.LicensingException">
            <summary>
            Represents a licensing exception.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Printing.LicensingException.#ctor(System.String)">
            <summary>Initializes a new instance of LicensingException</summary>
            <param name="message">Message for the licensing exception</param>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.SinglePage">
            <summary>
            One page at a time.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.OneColumn">
            <summary>
            Pages in a column.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoColumnLeft">
            <summary>
            Pages in two columns, odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoColumnRight">
            <summary>
            Pages in two columns, odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoPageLeft">
            <summary>
            Two pages at a time, odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageLayout.TwoPageRight">
            <summary>
            Two pages at a time, odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.Auto">
            <summary>
            ShowOutlines is used if outlines are present. If not ShowNone is used.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowNone">
            <summary>
            Outlines and Thumbnails toolbars are not shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowOutlines">
            <summary>
            Outlines toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowThumbnails">
            <summary>
            Thumbnails toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowOptionalContent">
            <summary>
            Optional content is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.ShowAttachments">
            <summary>
            Attachments toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.PageMode.FullScreen">
            <summary>
            Document is show in full screen mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.PageContents">
            <summary>
            Page contents resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.Annotation">
            <summary>
            Annotation resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.Default">
            <summary>
            Default resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.XObject">
            <summary>
            XObject resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Parser.ResourceType.Font">
            <summary>
            Font resource.
            </summary>
        </member>
    </members>
</doc>
